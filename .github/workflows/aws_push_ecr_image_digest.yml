name: Push ECR Image Digest

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository Name:'
        required: true
        type: choice
        options:
          - nginx-app-repo
          - bar
          - nicoc/test1
          - VxAccount
          - VxNotification
          - VxTransaction
      docker_tag:
        description: 'Docker Tag:'
        required: true
      docker_digest:
        description: 'Docker Image Digest:'
        required: true

jobs:
  list-tags-with-digests:
    runs-on: ubuntu-latest
    outputs:
      tag_digest_list: ${{ steps.fetch-tags.outputs.ecr_data }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Docker Images List
        id: fetch-tags
        run: |          
          REPO_NAME="${{ github.event.inputs.repo }}"
          DOCKER_TAG="${{ github.event.inputs.docker_tag }}"
          DOCKER_DIGEST="${{ github.event.inputs.docker_digest }}"
          
          echo "Filtering images in repository: $REPO_NAME with Tag: $DOCKER_TAG and Digest: $DOCKER_DIGEST"

          TAG_DIGEST_LIST=$(aws ecr describe-images --repository-name "$REPO_NAME" \
            --query "sort_by(imageDetails, &imagePushedAt)[*].{Tag: imageTags[0], Digest: imageDigest, Date: imagePushedAt}" \
            --output json | jq 'reverse')

          FILTERED_RESULT=$(echo "$TAG_DIGEST_LIST" | jq -c --arg tag "$DOCKER_TAG" --arg digest "$DOCKER_DIGEST" \
            '.[] | select(.Tag == $tag and .Digest == $digest)')

          if [ -z "$FILTERED_RESULT" ]; then
            echo "No matching tag and digest found."
            exit 1
          fi

          echo "Matching entry found:"
          echo "$FILTERED_RESULT" | jq

          echo "filtered_data=$FILTERED_RESULT" >> "$GITHUB_OUTPUT"
          
    outputs:
      filtered_data: ${{ steps.filter-tag-digest.outputs.filtered_data }}
